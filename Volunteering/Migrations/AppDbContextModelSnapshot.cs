// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volunteering.Data;

#nullable disable

namespace Volunteering.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Volunteering.Models.Admin", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_ID"));

                    b.Property<string>("Admin_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_SSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Admin_ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Volunteering.Models.Opportunity", b =>
                {
                    b.Property<int>("Opp_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Opp_ID"));

                    b.Property<string>("Opp_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Opp_End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opp_Form_Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opp_Img_Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opp_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Opp_Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sector_ID")
                        .HasColumnType("int");

                    b.HasKey("Opp_ID");

                    b.HasIndex("Sector_ID");

                    b.ToTable("Opportunities");
                });

            modelBuilder.Entity("Volunteering.Models.Sector", b =>
                {
                    b.Property<int>("Sec_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sec_ID"));

                    b.Property<string>("Sec_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sec_ID");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("Volunteering.Models.Volunteer", b =>
                {
                    b.Property<int>("Volun_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Volun_ID"));

                    b.Property<int>("Oppor_ID")
                        .HasColumnType("int");

                    b.Property<string>("Volun_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volun_First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volun_Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volun_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Volun_ID");

                    b.HasIndex("Oppor_ID");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("Volunteering.Models.Opportunity", b =>
                {
                    b.HasOne("Volunteering.Models.Sector", "Sector")
                        .WithMany("Opportunities")
                        .HasForeignKey("Sector_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Volunteering.Models.Volunteer", b =>
                {
                    b.HasOne("Volunteering.Models.Opportunity", "Opportunity")
                        .WithMany("Volunteers")
                        .HasForeignKey("Oppor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opportunity");
                });

            modelBuilder.Entity("Volunteering.Models.Opportunity", b =>
                {
                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("Volunteering.Models.Sector", b =>
                {
                    b.Navigation("Opportunities");
                });
#pragma warning restore 612, 618
        }
    }
}
